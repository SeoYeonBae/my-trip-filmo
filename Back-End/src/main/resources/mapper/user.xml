<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="com.ssafy.vue.user.model.mapper.UserMapper">

	<resultMap type="userDto" id="user">
		<result column="user_id" property="id" />
		<result column="user_name" property="name" />
	</resultMap>

	<resultMap type="userDto" id="userAll" extends="user">
		<result column="user_password" property="password" />
		<result column="user_email" property="email" />
		<result column="user_tel" property="tel" />
		<result column="manager" property="isManager" />
	</resultMap>

	<select id="loginUser" parameterType="userDto" resultMap="userAll">
		select user_id, user_name, user_password, user_email, user_tel, manager
		from
		users
		where user_id = #{id} and user_password = #{password}
	</select>

	<select id="userInfo" parameterType="string" resultMap="userAll">
		select user_name, user_id, user_email, user_tel, user_password, manager
		from users
		where user_id = #{userid}
	</select>
	
	<select id="getRefreshToken" parameterType="string" resultType="string">
		select token
		from users
		where user_id = #{userid}
	</select>
	
	<update id="saveRefreshToken" parameterType="map">
		update users
		set token = #{token}
		where user_id = #{userid}
	</update>
	
	<update id="deleteRefreshToken" parameterType="map">
		update users
		set token = #{token, jdbcType=VARCHAR}
		where user_id = #{userid}
	</update>
	
	<update id="modifyUser" parameterType="userDto">
		update users
		set
		user_password=#{password}, user_name=#{name}, user_email=#{email},
		user_tel=#{tel}
		where user_id = #{id}
	</update>

	<select id="findPass" parameterType="map" resultType="map">
		select
		user_password, user_email
		from users
		where user_id = #{id} and user_name = #{name}
	</select>

	<select id="checkID" parameterType="string" resultType="int">
		select
		count(user_id)
		from users
		where user_id = #{userID}
	</select>

	<insert id="joinUser" parameterType="userDto">
		insert into users (user_id,
		user_password, user_name, user_email, user_tel, manager)
		values (#{id},
		#{password}, #{name}, #{email}, #{tel}, #{isManager})
	</insert>

<!-- 		SET foreign_key_checks = 0;
		SET foreign_key_checks = 1; -->
	<delete id="deleteUser" parameterType="string">

		delete from users
		where user_id = #{userId};

	</delete>

</mapper>